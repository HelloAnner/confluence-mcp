version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: confluence-mcp-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # - NODE_ENV=production
      - PORT=3000
      # - DB_HOST=postgres
      # - DB_PORT=5432
      # - DB_NAME=confluence_mcp
      # - DB_USER=postgres
      # - DB_PASSWORD=postgres123
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
    # depends_on:
      # - postgres
      # - redis
    # networks:
      # - app-network
    # volumes:
      # - ./logs:/app/logs

  # # PostgreSQL 数据库
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: confluence-mcp-postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=confluence_mcp
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres123
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # # Redis 缓存
  # redis:
  #   image: redis:7-alpine
  #   container_name: confluence-mcp-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 3

  # # Nginx 反向代理
  # nginx:
  #   image: nginx:alpine
  #   container_name: confluence-mcp-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - app
  #   networks:
  #     - app-network

# volumes:
#   postgres_data:
#     driver: local
#   redis_data:
#     driver: local

# networks:
#   app-network:
#     driver: bridge